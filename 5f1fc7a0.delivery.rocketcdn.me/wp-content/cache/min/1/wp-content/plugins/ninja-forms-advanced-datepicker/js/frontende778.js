var customFrontendFlatPickr=Marionette.Object.extend({use_inline:!1,el:!1,currentDate:!1,initialize:function(){this.listenTo(Backbone.Radio.channel('flatpickr'),'init',this.modifyDatepicker);var fieldsChannel=Backbone.Radio.channel('fields');this.listenTo(fieldsChannel,'change:modelValue',this.clearErrors);Backbone.Radio.channel('flatpickr').reply('filter:settings',this.filterSettings,this);this.listenTo(nfRadio.channel('date'),'change:extra',this.changeTime);this.listenTo(nfRadio.channel('date'),'render:view',this.setupInitialState)},modifyDatepicker:function(dateObject,fieldModel,view){if(this.use_inline){jQuery(this.el).find('.form-control').hide()}
const minDate=fieldModel.get('min_date'),maxDate=fieldModel.get('max_date');if(minDate&&minDate.length>0)dateObject.set('minDate',minDate);if(maxDate&&maxDate.length>0)dateObject.set('maxDate',maxDate);let enableDisableDates=fieldModel.get('enable_disable_dates');let restrictedDates=fieldModel.get('restricted_dates');let dateMode=fieldModel.get('date_mode');let restrictedWeekdays=fieldModel.get('restricted_weekdays');if('undefined'==typeof restrictedWeekdays){restrictedWeekdays=[]}
let useDateSubmissionLimit=fieldModel.get('use_date_submission_limit');let submittedDates=fieldModel.get('submitted_dates');if('undefined'==typeof submittedDates){submittedDates=[]}
dateObject.set('disable',[function(date){let disableDate=!1;if('undefined'!=typeof restrictedDates&&null!=restrictedDates){let restrictedDatesArray=restrictedDates.split(',');if('enable'==enableDisableDates){if(-1==restrictedDates.indexOf(flatpickr.formatDate(date,'Y-m-d'))&&-1==restrictedWeekdays.indexOf(date.getDay())){disableDate=!0}}else{if(-1!=restrictedDates.indexOf(flatpickr.formatDate(date,'Y-m-d'))||-1!=restrictedWeekdays.indexOf(date.getDay())){disableDate=!0}}}
if('undefined'!=typeof submittedDates&&useDateSubmissionLimit){if(-1!=submittedDates.indexOf(flatpickr.formatDate(date,'Y-m-d'))){disableDate=!0}}
return disableDate}]);let that=this;dateObject.set('onChange',function(selectedDates,dateStr,instance){if('date_and_time'!=dateMode){return!1}
that.currentDate=selectedDates[0];that.setupInitialState(view)})},clearErrors:function(model){if('date'==model.get('type')){nfRadio.channel('fields').request('remove:error',model.get('id'),'required-error')}},filterSettings:function(settings,view){if('undefined'!=typeof view.model.get('use_inline')&&1==view.model.get('use_inline')){settings.inline=!0;this.use_inline=!0;this.el=view.el}
if('undefined'!=typeof view.model.get('use_date_range')&&1==view.model.get('use_date_range')){settings.mode='range'}
return settings},changeTime:function(e,fieldModel){if(1!=fieldModel.get('limit_hours')&&1!=fieldModel.get('use_date_submission_limit')){return!1}
this.maybeDisableHours(e.target,fieldModel);return!1},maybeDisableHours:function(select,fieldModel){let hourSelect=!1;let ampmSelect=!1;if(jQuery(select).hasClass('hour')){hourSelect=select;ampmSelect=jQuery(select).parent().siblings('div').find('.ampm')}else{ampmSelect=select;hourSelect=jQuery(select).parent().siblings('div').find('.hour')}
let selectedAmpm=jQuery(ampmSelect).val();let selectedHour=jQuery(hourSelect).val();selectedHour=this.convertHourTo24(selectedHour,selectedAmpm);let earliestHour=this.getEarliestHour(fieldModel);let latestHour=this.getLatestHour(fieldModel);let setSelected=!1;let newSelectedVal=!1;let that=this;jQuery(hourSelect).find('option').each(function(index){let val=that.convertHourTo24(this.value,selectedAmpm);if((parseInt(earliestHour)>val||parseInt(latestHour)<val)&&1==fieldModel.get('limit_hours')){jQuery(this).prop('disabled',!0);if(selectedHour==val){setSelected=!0}}else{jQuery(this).prop('disabled',!1);if(!newSelectedVal){newSelectedVal=this.value}}});if(setSelected){jQuery(hourSelect).val(newSelectedVal);selectedHour=this.convertHourTo24(newSelectedVal,selectedAmpm)}
let minuteSelect=jQuery(select).parent().siblings('div').find('.minute');this.maybeDisableMinutes(fieldModel,selectedHour,minuteSelect,earliestHour,latestHour)},maybeDisableMinutes:function(fieldModel,selectedHour,minuteSelect,earliestHour,latestHour){let selectedMinute=parseInt(jQuery(minuteSelect).val());let firstMinute=parseInt(fieldModel.get('first_minute'));let lastMinute=parseInt(fieldModel.get('last_minute'));let setSelected=!1;let newSelectedVal=!1;let takenMinutes=[];if(!this.currentDate){var currentDate='1970-01-01'}else{var currentDate=flatpickr.formatDate(this.currentDate,'Y-m-d')}
let takenDates=fieldModel.get('taken_dates');if('undefined'!=typeof takenDates&&'undefined'!=typeof takenDates[currentDate]){var takenTimes=takenDates[currentDate];for(var i=0;i<takenTimes.length;i++){if(selectedHour==takenTimes[i].hour){takenMinutes.push(parseInt(takenTimes[i].minute))}}}
jQuery(minuteSelect).find('option').each(function(index){let val=parseInt(this.value);if((1==fieldModel.get('limit_hours')&&((val<firstMinute&&selectedHour==earliestHour)||(val>lastMinute&&selectedHour==latestHour)))||(1==fieldModel.get('use_date_submission_limit')&&-1!=takenMinutes.indexOf(val))){jQuery(this).prop('disabled',!0);if(val==selectedMinute){setSelected=!0}}else{jQuery(this).prop('disabled',!1);if(!newSelectedVal){newSelectedVal=this.value}}});if(setSelected){jQuery(minuteSelect).val(newSelectedVal)}
return!1},setupInitialState:function(view){if(1!=view.model.get('limit_hours')&&1!=view.model.get('use_date_submission_limit')){return!1}
let hourSelect=jQuery(view.el).find('.hour');let minuteSelect=jQuery(view.el).find('.minute');let ampmSelect=jQuery(view.el).find('.ampm');if(1==view.model.get('hours_24')){this.maybeDisableHours(hourSelect,view.model)}else{this.maybeDisableHours(ampmSelect,view.model)}
return!1},convertHourTo24:function(hour,ampm){if(!ampm){return hour}
hour=parseInt(hour);if(12==hour&&'am'==ampm){hour=0}else if(12>hour&&'pm'==ampm){hour+=12}
return hour},getEarliestHour:function(fieldModel){if(1==fieldModel.get('hours_24')){return fieldModel.get('start_hour_24')}else{let earliestHour=fieldModel.get('start_hour_12');let earliestAmpm=fieldModel.get('start_hour_12_ampm');return this.convertHourTo24(earliestHour,earliestAmpm)}},getLatestHour:function(fieldModel){if(1==fieldModel.get('hours_24')){return fieldModel.get('end_hour_24')}else{let latestHour=fieldModel.get('end_hour_12');let latestAmpm=fieldModel.get('end_hour_12_ampm');return this.convertHourTo24(latestHour,latestAmpm)}},});jQuery(document).ready(function(){new customFrontendFlatPickr()})